jobs:
  docker-push:
    strategy:
      matrix:
        images: [k8s-helm-deploy-image, terraform-deploy-image, python-deploy-image, tinyproxy-image]
        folders: [k8s-helm-deploy-image/Dockerfile, terraform-deploy-image/Dockerfile, python-deploy-image/Dockerfile, tinyproxy-image/Dockerfile]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Set Tag and SHA
        run: |
          CLEAN_TAG=$(echo "${{ github.event.pull_request.head.ref  }}"  | tr / -)
          echo "TAG=$CLEAN_TAG" >> $GITHUB_ENV
          echo "SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
      - name: Build
        run: >
          docker build -t onsdigital/${{ matrix.images }}:$TAG
          -t ${{ secrets.GAR_LOCATION }}/${{ secrets.GAR_PROJECT_ID }}/docker-images/${{ matrix.images }}:$TAG -f ${{ matrix.folders }} .
      - name: Push to Docker Hub
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "Pushing to DockerHub with tag $TAG"
          docker push onsdigital/${{ matrix.images }}:$TAG
      - name: Push to GAR
        env:
          GAR_SERVICE_KEY: ${{ secrets.GAR_SERVICE_KEY }}
        run: |
          echo $GAR_SERVICE_KEY | docker login -u _json_key --password-stdin https://${{ secrets.GAR_LOCATION }}
          gcloud auth configure-docker ${{ secrets.GAR_LOCATION }}
          echo "Pushing to GAR with tag $TAG"
          docker push ${{ secrets.GAR_LOCATION }}/${{ secrets.GAR_PROJECT_ID }}/docker-images/${{ matrix.images }}:$TAG

